{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Daily THD visualisation with Filter on off\"\noutput: html_notebook\n---\n```{r}\n# Importing libraries and reading data\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(reshape)\nlibrary(lubridate)\nlibrary(zoo)\nlibrary(plyr)\nlibrary(tidyr)\nlibrary(hexbin)\nm46 <- read.csv(\"data/combined/46combined.csv\")\nm60 <- read.csv(\"data/combined/60combined.csv\")\n```\n```{r}\n# Transforming date and time variables\nm46$StartTime <- as.POSIXct(m46$StartTime, format = \"%d/%m/%Y %H:%M\")\nm60$StartTime <- as.POSIXct(m60$StartTime, format = \"%Y-%m-%d %H:%M:%S\")\nm46$B11time <- as.POSIXct(m46$B11time, format = \"%d/%m/%Y %H:%M\")\nm60$B11time <- as.POSIXct(m60$B11time, format = \"%Y-%m-%d %H:%M:%S\")\nm46$B12time <- as.POSIXct(m46$B12time, format = \"%d/%m/%Y %H:%M\")\nm60$B12time <- as.POSIXct(m60$B12time, format = \"%Y-%m-%d %H:%M:%S\")\nm46$B21time <- as.POSIXct(m46$B21time, format = \"%d/%m/%Y %H:%M\")\nm60$B21time <- as.POSIXct(m60$B21time, format = \"%Y-%m-%d %H:%M:%S\")\nm46$B22time <- as.POSIXct(m46$B22time, format = \"%d/%m/%Y %H:%M\")\nm60$B22time <- as.POSIXct(m60$B22time, format = \"%Y-%m-%d %H:%M:%S\")\n\n# Combining the dataset\nm46$type <- \"m46\"\nm60$type <- \"m60\"\n\n# Adding time specific columns\nm46$month <- month.abb[month(m46$StartTime)]\nm46$time  <- time(m46$StartTime)\nm46$day   <- day(m46$StartTime)\n\nm60$month <- month.abb[month(m60$StartTime)]\nm60$time  <- time(m60$StartTime)\nm60$day   <- day(m60$StartTime)\n\n# Partitioning data by month\nm46$monthorder <- 0\nm46[m46$month == 'Nov', c('monthorder')] <- seq(1, nrow(m46[m46$month == 'Nov',]), 1)\nm46[m46$month == 'Dec', c('monthorder')] <- seq(1, nrow(m46[m46$month == 'Dec',]), 1)\nm46[m46$month == 'Jan', c('monthorder')] <- seq(1, nrow(m46[m46$month == 'Jan',]), 1)\nm46[m46$month == 'Feb', c('monthorder')] <- seq(1, nrow(m46[m46$month == 'Feb',]), 1)\nm46[m46$month == 'Mar', c('monthorder')] <- seq(1, nrow(m46[m46$month == 'Mar',]), 1)\nm46[m46$month == 'Apr', c('monthorder')] <- seq(1, nrow(m46[m46$month == 'Apr',]), 1)\nm46$month <- factor(m46$month, c(\"Nov\", \"Dec\", \"Jan\", \"Feb\", \"Mar\", \"Apr\")) #Ordering based on months\n\nm60$monthorder <- 0\nm60[m60$month == 'Nov', c('monthorder')] <- seq(1, nrow(m60[m60$month == 'Nov',]), 1)\nm60[m60$month == 'Dec', c('monthorder')] <- seq(1, nrow(m60[m60$month == 'Dec',]), 1)\nm60[m60$month == 'Jan', c('monthorder')] <- seq(1, nrow(m60[m60$month == 'Jan',]), 1)\nm60[m60$month == 'Feb', c('monthorder')] <- seq(1, nrow(m60[m60$month == 'Feb',]), 1)\nm60[m60$month == 'Mar', c('monthorder')] <- seq(1, nrow(m60[m60$month == 'Mar',]), 1)\nm60[m60$month == 'Apr', c('monthorder')] <- seq(1, nrow(m60[m60$month == 'Apr',]), 1)\nm60$month <- factor(m60$month, c(\"Nov\", \"Dec\", \"Jan\", \"Feb\", \"Mar\", \"Apr\")) #Ordering based on months\n\n# Partitioning data by day of the week\nm46$wday <- wday(m46$StartTime, label=TRUE)\nm46$dayorder <- 0\nmonths = c('Nov', 'Dec', 'Jan', 'Feb', 'Mar', 'Apr')\ndays = 1:31\nfor (month in months){\n  for (day in days){\n    if (max(m46[m46$month==month,'day']) < day){\n      next\n    }\n    m46[m46$month == month & m46$day == day, c('dayorder')] <- 1:nrow(m46[m46$month == month & m46$day == day, ])\n  }\n}\n\nm60$wday <- wday(m60$StartTime, label=TRUE)\nm60$dayorder <- 0\nmonths = c('Nov', 'Dec', 'Jan', 'Feb', 'Mar', 'Apr')\ndays = 1:31\nfor (month in months){\n  for (day in days){\n    if (max(m60[m60$month==month,'day']) < day){\n      next\n    }\n    m60[m60$month == month & m60$day == day, c('dayorder')] <- 1:nrow(m60[m60$month == month & m60$day == day, ])\n  }\n}\n\n# Adding week number data\nm46$week <- week(m46$StartTime)\nm60$week <- week(m60$StartTime)\n\n# combining datasets\ndf <- rbind(m46, m60)\n```\n```{r}\nfor (month in months){\n  colors <- c(\"lightpink\", \"white\", \"navy\", \"darkturquoise\")\n  names(colors) <- c(\"UIT\", \"IN\", \"m46\", \"m60\")\n  condition <- df$month==month & df$day < 16\n  print(\n  ggplot(data = df[condition,]) + \n    geom_tile(aes(x=dayorder, y =1.45, height = 0.3, fill=B11), alpha=0.3) + \n    geom_tile(aes(x=dayorder, y =1.15, height = 0.3, fill=B12), alpha=0.3) + \n    geom_tile(aes(x=dayorder, y =0.85, height = 0.3, fill=B21), alpha=0.3) + \n    geom_tile(aes(x=dayorder, y =0.55, height = 0.3, fill=B22), alpha=0.3) + \n    geom_line(aes(x=dayorder, y=THD1, color = type)) + \n    facet_wrap(~day) + ylim(0.4,1.6) + scale_fill_manual(name = \"Filter\", values = colors) + scale_color_manual(name = \"Point\", values = colors) +\n    ggtitle(paste(\"Variation of THD1 for\", month)) + xlab(\"Time\") + ylab(\"THD\") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\"))\n  )\n}\n```\n\n```{r}\nfor (month in months){\n  colors <- c(\"lightpink\", \"white\", \"navy\", \"darkturquoise\")\n  names(colors) <- c(\"UIT\", \"IN\", \"m46\", \"m60\")\n  condition <- df$month==month & df$day >=16\n  print(\n  ggplot(data = df[condition,]) + \n    geom_tile(aes(x=dayorder, y =1.45, height = 0.3, fill=B11), alpha=0.3) + \n    geom_tile(aes(x=dayorder, y =1.15, height = 0.3, fill=B12), alpha=0.3) + \n    geom_tile(aes(x=dayorder, y =0.85, height = 0.3, fill=B21), alpha=0.3) + \n    geom_tile(aes(x=dayorder, y =0.55, height = 0.3, fill=B22), alpha=0.3) + \n    geom_line(aes(x=dayorder, y=THD1, color = type)) + \n    facet_wrap(~day) + ylim(0.4,1.6) + scale_fill_manual(name = \"Filter\", values = colors) + scale_color_manual(name = \"Point\", values = colors) +\n    ggtitle(paste(\"Variation of THD1 for\", month)) + xlab(\"Time\") + ylab(\"THD\") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\"))\n  )\n}\n```\n\n```{r}\ndf$readdate <- paste(df$month, df$day)\norder <- unique(df$readdate)\ndf$readdate <- factor(df$readdate, order)\n```\n```{r}\ndfnormal <- df[df$month == 'Nov' & df$day %in% c(1, 3, 4, 7, 8, 11, 18, 19, 20, 23, 24, 26, 27, 28),]\ntemp <- df[df$month == 'Dec' & df$day %in% c(3, 4, 7, 8, 11, 18, 21, 24, 30, 31),]\ndfnormal <- rbind(temp, dfnormal)\ntemp <- df[df$month == 'Jan' & df$day %in% c(1, 3, 12, 27, 29),]\ndfnormal <- rbind(temp, dfnormal)\ntemp <- df[df$month == 'Feb' & df$day %in% c(4, 5, 12, 14, 16, 19, 21),]\ndfnormal <- rbind(temp, dfnormal)\ntemp <- df[df$month == 'Mar' & df$day %in% c(2, 4, 5, 6, 11, 12, 15, 23, 24, 25, 26, 29),]\ndfnormal <- rbind(temp, dfnormal)\ntemp <- df[df$month == 'Apr' & df$day %in% c(1,2),]\ndfnormal <- rbind(temp, dfnormal)\n\nggplot(data = dfnormal) + \n  geom_tile(aes(x=dayorder, y =1.45, height = 0.3, fill=B11), alpha=0.3) + \n  geom_tile(aes(x=dayorder, y =1.15, height = 0.3, fill=B12), alpha=0.3) + \n  geom_tile(aes(x=dayorder, y =0.85, height = 0.3, fill=B21), alpha=0.3) + \n  geom_tile(aes(x=dayorder, y =0.55, height = 0.3, fill=B22), alpha=0.3) + \n  geom_line(aes(x=dayorder, y=THD1, color = type)) + \n  facet_wrap(~readdate) + ylim(0.4,1.6) + scale_fill_manual(name = \"Filter\", values = colors) + scale_color_manual(name = \"Point\", values = colors) +\n  ggtitle(paste(\"Daily THD1 where B11, B12, B22 are ON\")) + xlab(\"Time\") + ylab(\"THD\") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\"))\n```\n```{r}\n\ndfB22 <- df[df$month == 'Nov' & df$day %in% c(2, 6, 12, 25),]\ntemp <- df[df$month == 'Dec' & df$day %in% c(9),]\ndfB22 <- rbind(temp, dfB22)\ntemp <- df[df$month == 'Jan' & df$day %in% c(2, 15, 22),]\ndfB22 <- rbind(temp, dfB22)\ntemp <- df[df$month == 'Feb' & df$day %in% c(22, 23, 24, 25, 26, 27, 28),]\ndfB22 <- rbind(temp, dfB22)\ntemp <- df[df$month == 'Mar' & df$day %in% c(1, 8, 10, 17, 22),]\ndfB22 <- rbind(temp, dfB22)\n\nggplot(data = dfB22) + \n  geom_tile(aes(x=dayorder, y =1.45, height = 0.3, fill=B11), alpha=0.3) + \n  geom_tile(aes(x=dayorder, y =1.15, height = 0.3, fill=B12), alpha=0.3) + \n  geom_tile(aes(x=dayorder, y =0.85, height = 0.3, fill=B21), alpha=0.3) + \n  geom_tile(aes(x=dayorder, y =0.55, height = 0.3, fill=B22), alpha=0.3) + \n  geom_line(aes(x=dayorder, y=THD1, color = type)) + \n  facet_wrap(~readdate) + ylim(0.4,1.6) + scale_fill_manual(name = \"Filter\", values = colors) + scale_color_manual(name = \"Point\", values = colors) +\n  ggtitle(paste(\"Daily THD1 when B22 is turned OFF\")) + xlab(\"Time\") + ylab(\"THD\") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\"))\n```\n```{r}\nggplot(data = dfB22) + geom_density(aes(x=THD1, fill = B22), alpha = 0.2) + facet_wrap(~type) + ggtitle(\"Density comparison of B22 ON and OFF\")\n```\n```{r}\ndfB12 <- df[df$month == 'Nov' & df$day %in% c(5, 9, 13, 21, 29),]\ntemp <- df[df$month == 'Jan' & df$day %in% c(11, 14, 21),]\ndfB12 <- rbind(temp, dfB12)\ntemp <- df[df$month == 'Feb' & df$day %in% c(2, 17),]\ndfB12 <- rbind(temp, dfB12)\ntemp <- df[df$month == 'Mar' & df$day %in% c(13, 16, 21, 28),]\ndfB12 <- rbind(temp, dfB12)\n\nggplot(data = dfB12) + \n  geom_tile(aes(x=dayorder, y =1.45, height = 0.3, fill=B11), alpha=0.3) + \n  geom_tile(aes(x=dayorder, y =1.15, height = 0.3, fill=B12), alpha=0.3) + \n  geom_tile(aes(x=dayorder, y =0.85, height = 0.3, fill=B21), alpha=0.3) + \n  geom_tile(aes(x=dayorder, y =0.55, height = 0.3, fill=B22), alpha=0.3) + \n  geom_line(aes(x=dayorder, y=THD1, color = type)) + \n  facet_wrap(~readdate) + ylim(0.4,1.6) + scale_fill_manual(name = \"Filter\", values = colors) + scale_color_manual(name = \"Point\", values = colors) +\n  ggtitle(paste(\"Daily THD1 when B12 is turned OFF\")) + xlab(\"Time\") + ylab(\"THD\") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\"))\n```\n```{r}\nggplot(data = dfB12) + geom_density(aes(x=THD1, fill = B12), alpha = 0.2) + facet_wrap(~type) + ggtitle(\"Density comparison of B12 ON and OFF\")\n```\n```{r}\ndfB12B22 <- df[df$month == 'Nov' & df$day %in% c(30),]\ntemp <- df[df$month == 'Dec' & df$day %in% c(1, 5, 10, 17),]\ndfB12B22 <- rbind(temp, dfB12B22)\ntemp <- df[df$month == 'Jan' & df$day %in% c(6, 8),]\ndfB12B22 <- rbind(temp, dfB12B22)\ntemp <- df[df$month == 'Feb' & df$day %in% c(3, 11, 13, 18, 20),]\ndfB12B22 <- rbind(temp, dfB12B22)\ntemp <- df[df$month == 'Mar' & df$day %in% c(3, 27, 30, 31),]\ndfB12B22 <- rbind(temp, dfB12B22)\n\nggplot(data = dfB12B22) + \n  geom_tile(aes(x=dayorder, y =1.45, height = 0.3, fill=B11), alpha=0.3) + \n  geom_tile(aes(x=dayorder, y =1.15, height = 0.3, fill=B12), alpha=0.3) + \n  geom_tile(aes(x=dayorder, y =0.85, height = 0.3, fill=B21), alpha=0.3) + \n  geom_tile(aes(x=dayorder, y =0.55, height = 0.3, fill=B22), alpha=0.3) + \n  geom_line(aes(x=dayorder, y=THD1, color = type)) + \n  facet_wrap(~readdate) + ylim(0.4,1.6) + scale_fill_manual(name = \"Filter\", values = colors) + scale_color_manual(name = \"Point\", values = colors) +\n  ggtitle(paste(\"Daily THD1 when B12 and B22 is turned OFF\")) + xlab(\"Time\") + ylab(\"THD\") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\"))\n```\n```{r}\n\ndffilter <- df[df$month == 'Nov' & df$day %in% c(10, 14, 15, 16, 22),]\ntemp <- df[df$month == 'Dec' & df$day %in% c(2, 6, 12, 13, 14, 15, 16, 19, 20, 22, 23, 25, 26, 27, 28, 29),]\ndffilter <- rbind(temp, dffilter)\ntemp <- df[df$month == 'Jan' & df$day %in% c(4, 5, 7, 9, 10, 13, 16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 30, 31),]\ndffilter <- rbind(temp, dffilter)\ntemp <- df[df$month == 'Feb' & df$day %in% c(1, 6, 7, 8, 9, 10, 15),]\ndffilter <- rbind(temp, dffilter)\ntemp <- df[df$month == 'Mar' & df$day %in% c(7, 9, 14, 18, 19, 20),]\ndffilter <- rbind(temp, dffilter)\n```\n```{r}\nggplot(data = dffilter) + \n  geom_tile(aes(x=dayorder, y =1.45, height = 0.3, fill=B11), alpha=0.3) + \n  geom_tile(aes(x=dayorder, y =1.15, height = 0.3, fill=B12), alpha=0.3) + \n  geom_tile(aes(x=dayorder, y =0.85, height = 0.3, fill=B21), alpha=0.3) + \n  geom_tile(aes(x=dayorder, y =0.55, height = 0.3, fill=B22), alpha=0.3) + \n  geom_line(aes(x=dayorder, y=THD1, color = type)) + \n  facet_wrap(~readdate) + ylim(0.4,1.6) + scale_fill_manual(name = \"Filter\", values = colors) + scale_color_manual(name = \"Point\", values = colors) +\n  ggtitle(paste(\"Daily THD1 with filters\")) + xlab(\"Time\") + ylab(\"THD\") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\"))\n\n\n```\n\n\n```{r}\ndf$B11dif <- as.numeric(difftime(df$StartTime, df$B11time, units = 'secs'))\ndf$B12dif <- as.numeric(difftime(df$StartTime, df$B12time, units = 'secs'))\ndf$B21dif <- as.numeric(difftime(df$StartTime, df$B21time, units = 'secs'))\ndf$B22dif <- as.numeric(difftime(df$StartTime, df$B22time, units = 'secs'))\n\ndf$B11month <- month.abb[month(df$B11time)]\ndf$B12month <- month.abb[month(df$B12time)]\ndf$B21month <- month.abb[month(df$B21time)]\ndf$B22month <- month.abb[month(df$B22time)]\n\ndf$B11dif=df$B11dif/3600\ndf$B12dif=df$B12dif/3600\ndf$B21dif=df$B21dif/3600\ndf$B22dif=df$B22dif/3600\n```\n\n\n```{r}\nggplot(data=df[df$type=='m46',],aes(x=B11dif,y=THD1)) + geom_hex(bins=40) + theme_bw() + facet_wrap(~B11) + xlab('Time Elapsed (in hours)') + ggtitle('B11') + theme(plot.title = element_text(hjust = 0.5))\nggplot(data=df[df$type=='m46',],aes(x=B12dif,y=THD1)) + geom_hex(bins=40) + theme_bw() + facet_wrap(~B12) + xlab('Time Elapsed (in hours)') + ggtitle('B12') + theme(plot.title = element_text(hjust = 0.5))\nggplot(data=df[df$type=='m46',],aes(x=B21dif,y=THD1)) + geom_hex(bins=40) + theme_bw() + facet_wrap(~B21) + xlab('Time Elapsed (in hours)') + ggtitle('B21') + theme(plot.title = element_text(hjust = 0.5))\nggplot(data=df[df$type=='m46',],aes(x=B22dif,y=THD1)) + geom_hex(bins=40) + theme_bw() + facet_wrap(~B22) + xlab('Time Elapsed (in hours)') + ggtitle('B22') + theme(plot.title = element_text(hjust = 0.5))\n```\n\n```{r}\nggplot(data=df[df$type=='m60',],aes(x=B11dif,y=THD1)) + geom_hex(bins=40) + theme_bw() + facet_wrap(~B11) + xlab('Time Elapsed (in hours)') + ggtitle('B11') + theme(plot.title = element_text(hjust = 0.5))\nggplot(data=df[df$type=='m60',],aes(x=B12dif,y=THD1)) + geom_hex(bins=40) + theme_bw() + facet_wrap(~B12) + xlab('Time Elapsed (in hours)') + ggtitle('B12') + theme(plot.title = element_text(hjust = 0.5))\nggplot(data=df[df$type=='m60',],aes(x=B21dif,y=THD1)) + geom_hex(bins=40) + theme_bw() + facet_wrap(~B21) + xlab('Time Elapsed (in hours)') + ggtitle('B21') + theme(plot.title = element_text(hjust = 0.5))\nggplot(data=df[df$type=='m60',],aes(x=B22dif,y=THD1)) + geom_hex(bins=40) + theme_bw() + facet_wrap(~B22) + xlab('Time Elapsed (in hours)') + ggtitle('B22') + theme(plot.title = element_text(hjust = 0.5))\n```\n\n```{r}\nggplot(data=df[df$B11==\"UIT\",],aes(x=B11dif,y=THD1)) + geom_hex(bins=50) + theme_bw() + facet_wrap(~type)\nggplot(data=df[df$B12==\"UIT\",],aes(x=B12dif,y=THD1)) + geom_hex(bins=50) + theme_bw() + facet_wrap(~type)\nggplot(data=df[df$B21==\"UIT\",],aes(x=B21dif,y=THD1)) + geom_hex(bins=50) + theme_bw() + facet_wrap(~type)\nggplot(data=df[df$B22==\"UIT\",],aes(x=B22dif,y=THD1)) + geom_hex(bins=50) + theme_bw() + facet_wrap(~type)\n```\n\n\n```{r}\nfiltermonths <- c(\"Oct\", \"Nov\", \"Dec\", \"Jan\", \"Feb\", \"Mar\", \"Apr\")\nplots <- list()\ni <- 1\nfor (month in filtermonths){\n   plots[[i]] <- ggplot(data = df[df$B11month == month,]) + geom_point(aes(x=B11dif, y = THD1), color = \"dodgerblue\", alpha = 0.2) + facet_wrap(~B11) +    ggtitle(month) + xlab(\"Time elasped in seconds\") + ylab(\"THD1\") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\")) \n  i=i+1\n}\ngrid.arrange(plots[[2]], plots[[3]], plots[[4]], plots[[5]], plots[[6]], plots[[7]], ncol=2, top = \"Filter B11\")\n```\n\n```{r}\nplots <- list()\ni <- 1\nfor (month in filtermonths){\n   plots[[i]] <- ggplot(data = df[df$B12month == month,]) + geom_point(aes(x=B12dif, y = THD1), color = \"dodgerblue\", alpha = 0.2) + facet_wrap(~B12) + ggtitle(month) + xlab(\"Time elasped in seconds\") + ylab(\"THD1\") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\"))\n  i=i+1\n}\ngrid.arrange(plots[[2]], plots[[3]], plots[[4]], plots[[5]], plots[[6]], plots[[7]], ncol=2, top = \"Filter B12\")\n```\n```{r}\nfiltermonths1 <- c(\"Oct\", \"Nov\", \"Feb\", \"Mar\", \"Apr\")\nplots <- list()\ni <- 1\nfor (month in filtermonths1){\n  plots[[i]] <- ggplot(data = df[df$B21month == month,]) + geom_point(aes(x=B21dif, y = THD1), color = \"dodgerblue\", alpha = 0.2) + facet_wrap(~B21) +    ggtitle(month) + xlab(\"Time elasped in seconds\") + ylab(\"THD1\") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\")) \n  i=i+1\n}\ngrid.arrange(plots[[2]], plots[[3]], plots[[4]], plots[[5]], ncol=2, top = \"Filter B21\")\n```\n\n```{r}\nplots <- list()\ni <- 1\nfor (month in filtermonths){\n  plots[[i]] <-ggplot(data = df[df$B22month == month,]) + geom_point(aes(x=B22dif, y = THD1), color = \"dodgerblue\", alpha = 0.2) + facet_wrap(~B22) +    ggtitle(month) + xlab(\"Time elasped in seconds\") + ylab(\"THD1\") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\")) \n i=i+1\n}\ngrid.arrange(plots[[2]], plots[[3]], plots[[4]], plots[[5]], plots[[6]], plots[[7]], ncol=2, top = \"Filter B22\")\n```\n\n",
    "created" : 1527257425217.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3921212581",
    "id" : "1CA0C6F0",
    "lastKnownWriteTime" : 1527597849,
    "last_content_update" : -2147483648,
    "path" : "~/Downloads/WI4231 Mathematical Data Science/Original Hexbin/Visualisations of daily THD with filter On Off.Rmd",
    "project_path" : "Visualisations of daily THD with filter On Off.Rmd",
    "properties" : {
        "chunk_output_type" : "inline"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}