{
    "collab_server" : "",
    "contents" : "---\ntitle: \"R Notebook\"\noutput: html_notebook\n---\n\n```{r}\n# Importing libraries and reading data\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(reshape)\nlibrary(lubridate)\nlibrary(plyr)\nlibrary(dplyr)\nlibrary(stringr)\nm46 <- read.csv(\"data/46combined.csv\")\nm60 <- read.csv(\"data/60combined.csv\")\n```\n\n```{r Change IN to 1 and UIT to 0}\nm46$B11 = ifelse(m46$B11==\"IN\",1,0)\nm46$B12 = ifelse(m46$B12==\"IN\",1,0)\nm46$B21 = ifelse(m46$B21==\"IN\",1,0)\nm46$B22 = ifelse(m46$B22==\"IN\",1,0)\nm60$B11 = ifelse(m60$B11==\"IN\",1,0)\nm60$B12 = ifelse(m60$B12==\"IN\",1,0)\nm60$B21 = ifelse(m60$B21==\"IN\",1,0)\nm60$B22 = ifelse(m60$B22==\"IN\",1,0)\n```\n\n```{r Assign \"type\" to each permutation}\n# Assign numbers to each permutation of on/off\nm46$type = 0\nfor(i in 1:nrow(m46)) {\n  if(m46$B11[i]==1)\n    m46$type[i] = m46$type[i] +1000\n  if(m46$B12[i]==1)\n    m46$type[i] = m46$type[i] +100\n  if(m46$B21[i]==1)\n    m46$type[i] = m46$type[i] +10\n  if(m46$B22[i]==1)\n    m46$type[i] = m46$type[i] +1\n}\n\nm60$type = 0\nfor(i in 1:nrow(m60)) {\n  if(m60$B11[i]==1)\n    m60$type[i] = m60$type[i] +1000\n  if(m60$B12[i]==1)\n    m60$type[i] = m60$type[i] +100\n  if(m60$B21[i]==1)\n    m60$type[i] = m60$type[i] +10\n  if(m60$B22[i]==1)\n    m60$type[i] = m60$type[i] +1\n}\nm46plot$name = rownames(m46plot)\nm46plot$name=str_pad(m46plot$name, 4, pad = \"0\")\nm46plot$name = rownames(m46plot)\nm46plot$name=str_pad(m46plot$name, 4, pad = \"0\")\n  \nwrite.csv(m46,'m46labelled.csv')\nwrite.csv(m60,'m60labelled.csv')\n```\n\n\n```{r Factor keep specific months}\nm46$type = factor(m46$type)\n\nm46$StartTime <- as.POSIXct(m46$StartTime, format = \"%d/%m/%Y %H:%M\")\nattributes(m46$StartTime[1])\nm46 = m46[which(month.abb[month(m46$StartTime)]=='Apr'),]\n\nm60$type = factor(m60$type)\nm60$StartTime <- as.POSIXct(m60$StartTime, format = \"%Y-%m-%d %H:%M:%S\")\nattributes(m60$StartTime[1])\nm60 = m60[which(month.abb[month(m60$StartTime)]=='Apr'),]\n```\n\n```{r Create summary table}\nm46typecount = data.frame(t(summary(m46$type)))\nm60typecount = data.frame(t(summary(m60$type)))\nnames(m46typecount)=c(0,1,100,101,111,1001,1100,1101,1111)\nnames(m60typecount)=c(0,1,100,101,111,1001,1100,1101,1111)\n\nm46summary=tapply(m46$THD1,m46$type,mean)\nm46summary=rbind(m46summary,tapply(m46$THD2,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$THD3,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$H1_1,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$H2_1,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$H3_1,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$H5_1,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$H7_1,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$H1_2,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$H2_2,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$H3_2,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$H5_2,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$H7_2,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$H1_3,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$H2_3,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$H3_3,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$H5_3,m46$type,mean))\nm46summary=rbind(m46summary,tapply(m46$H7_3,m46$type,mean))\n\nm60summary=tapply(m60$THD1,m60$type,mean)\nm60summary=rbind(m60summary,tapply(m60$THD2,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$THD3,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$H1_1,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$H2_1,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$H3_1,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$H5_1,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$H7_1,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$H1_2,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$H2_2,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$H3_2,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$H5_2,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$H7_2,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$H1_3,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$H2_3,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$H3_3,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$H5_3,m60$type,mean))\nm60summary=rbind(m60summary,tapply(m60$H7_3,m60$type,mean))\n\ntablenames = c('THD1','THD2','THD3','H1_1','H2_1','H3_1','H5_1','H7_1','H1_2','H2_2','H3_2','H5_2','H7_2',\n               'H1_3','H2_3','H3_3','H5_3','H7_3')\nrownames(m46summary) = tablenames\nrownames(m60summary) = tablenames\n\nm46rawmean = as.matrix(m46summary) %*% t(as.matrix(m46typecount))\nm60rawmean = as.matrix(m60summary) %*% t(as.matrix(m60typecount))\n```\n\n```{r Plots}\n\nm46plot = data.frame(t(m46summary))\nm46plot$name = rownames(m46plot)\nm46plot$name=str_pad(m46plot$name, 4, pad = \"0\")\n\n\nggplot(m46plot,aes(x=name,y=THD1)) + geom_bar(stat=\"identity\", fill = \"dodgerblue\") + xlab(\"Filter Activation Combination\") + ylab(\"THD1\") + ggtitle(\"Average THD1\") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\"))\n```\n\n```{r}\ndf1 <- melt(m46plot, id=c(\"name\"))\ntypes = unique(df1$variable)\nfor (type in types){\n  print(\nggplot(df1[df1$variable == type,],aes(x=name,y=value)) + geom_bar(stat=\"identity\", fill = \"dodgerblue\") + xlab(\"Filter Activation Combination\") + ylab(type) + ggtitle(paste(\"Average\", type)) + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\"))\n)}\n```\n\n```{r}\ndf3 = m46plot\ndf3$count = t(m46typecount)/sum(m46typecount)\n#+geom_line(aes(y=count),colour=\"brickred\") \n#\n\nggplot(df3,aes(x=name, group =1)) + geom_bar(aes(y=THD1),stat=\"identity\", fill = \"dodgerblue\") +geom_line(aes(y=count),colour=\"red\")+ xlab(\"Filter Activation Combination\") + ylab(\"THD1\") + ggtitle(\"Average THD1\")+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\")) \n```\n\n\n```{r}\nm60plot = data.frame(t(m60summary))\nm60plot$name = rownames(m60plot)\nm60plot$name=str_pad(m60plot$name, 4, pad = \"0\")\n\ndf2 <- melt(m60plot, id=c(\"name\"))\ntypes = unique(df2$variable)\nfor (type in types){\n  print(\nggplot(df2[df2$variable == type,],aes(x=name,y=value)) + geom_bar(stat=\"identity\", fill = \"dodgerblue\") + xlab(\"Filter Activation Combination\") + ylab(type) + ggtitle(paste(\"Average\", type)) + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\"))\n)}\n```\n\n```{r}\ndf3 <- m46[,c('THD1','THD2','THD3','H1_1','H2_1','H3_1','H5_1','H7_1','H1_2','H2_2','H3_2','H5_2','H7_2',\n               'H1_3','H2_3','H3_3','H5_3','H7_3', 'type')]\ndf3 <- melt(df3, id=c(\"type\"))\ntypes <- unique(df3$variable)\nfor (type in types){\n  print(\nggplot(data = df3[df3$variable==type,]) + geom_violin(aes(x=type, y = value, fill = type)) + xlab(\"Filter Activation Combination\") + ylab(type) + ggtitle(paste(\"Violin plot of\", type)) + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\"))\n)}\n```\n\n```{r}\ndf3 <- m46[,c('THD1','THD2','THD3','H1_1','H2_1','H3_1','H5_1','H7_1','H1_2','H2_2','H3_2','H5_2','H7_2',\n               'H1_3','H2_3','H3_3','H5_3','H7_3', 'type')]\ndf3 <- melt(df3, id=c(\"type\"))\ntypes <- unique(df3$variable)\nfor (type in types){\n  print(\nggplot(data = df3[df3$variable==type,]) + geom_boxplot(aes(x=type, y = value, fill = type)) + xlab(\"Filter Activation Combination\") + ylab(type) + ggtitle(paste(\"Violin plot of\", type)) + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = \"black\"))\n)}\n```\n",
    "created" : 1525726031417.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3034164500",
    "id" : "23E02450",
    "lastKnownWriteTime" : 1527096746,
    "last_content_update" : -2147483648,
    "path" : "~/Downloads/WI4231 Mathematical Data Science/April/THDvsFilters.Rmd",
    "project_path" : "THDvsFilters.Rmd",
    "properties" : {
        "chunk_output_type" : "inline",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}