m46$StartTime <- as.POSIXct(m46$StartTime, format = "%d/%m/%Y %H:%M:%S")
m60$StartTime <- as.POSIXct(m60$StartTime, format = "%d/%m/%Y %H:%M:%S")
switch$datetime <- paste(switch[,1], switch$Time)
switch$datetime <- as.POSIXct(switch$datetime, format = "%d/%m/%Y %H:%M:%S")
switch$date <- format(switch[,1], format = "%d/%m/%Y")
switch$time <- format(switch$Time, format = "%H:%M:%S")
switch[,1] <- NULL
switch$Time <- NULL
switch$datetime10mins <- floor_date(switch$datetime, "10 minutes")
# Separating dataset based on filters
B11 <- switch[switch$Element=="MDC_MDC AC Filter 11 VS",]
B12 <- switch[switch$Element=="MDC_MDC AC Filter 12 VS",]
B21 <- switch[switch$Element=="MDC_MDC AC Filter 21 VS",]
B22 <- switch[switch$Element=="MDC_MDC AC Filter 22 VS",]
# Adding name for filter as variable
B11$name <- 'B11'
B12$name <- 'B12'
B21$name <- 'B21'
B22$name <- 'B22'
# Removing second of each repeated status
B11 <- B11[seq(1, nrow(B11), 2),]
B12 <- B12[seq(1, nrow(B12), 2),]
B21 <- B21[seq(1, nrow(B21), 2),]
B22 <- B22[seq(1, nrow(B22), 2),]
B11$StartTime<-B11$datetime10mins
B11=B11[,seq(1,7,1)]
B11[which(B11$status=='UIT'),8] = -1.0
B11[which(B11$status=='IN'),8] = 0.4
B12[which(B12$status=='UIT'),8] = -1.0
B12[which(B12$status=='IN'),8] = 0.8
B21[which(B21$status=='UIT'),8] = -1.0
B21[which(B21$status=='IN'),8] = 1.2
B22[which(B22$status=='UIT'),8] = -1.0
B22[which(B22$status=='IN'),8] = 1.6
#B11$meow <- ifelse(B11$status == 'UIT', -1.0, 0.4)
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
#df$month <- factor(df$month, c("Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
df$monthorder <- 0
df[df$month == 'Nov', c('monthorder')] <- seq(1, nrow(df[df$month == 'Nov',]), 1)
df[df$month == 'Dec', c('monthorder')] <- seq(1, nrow(df[df$month == 'Dec',]), 1)
df[df$month == 'Jan', c('monthorder')] <- seq(1, nrow(df[df$month == 'Jan',]), 1)
df[df$month == 'Feb', c('monthorder')] <- seq(1, nrow(df[df$month == 'Feb',]), 1)
df[df$month == 'Mar', c('monthorder')] <- seq(1, nrow(df[df$month == 'Mar',]), 1)
df[df$month == 'Apr', c('monthorder')] <- seq(1, nrow(df[df$month == 'Apr',]), 1)
ggplot(data=df) + geom_step(aes(x=datetime, y=V8, color = name)) + facet_wrap(~month)
View(df)
View(df)
View(switch)
View(switch)
switch <- read.csv("data/switching_data.csv")
View(switch)
View(switch)
switch$datetime <- paste(switch[,1], switch$Time)
switch$datetime <- as.POSIXct(switch$datetime, format = "%d/%m/%Y %H:%M:%S")
switch$date <- format(switch[,1], format = "%d/%m/%Y")
switch$time <- format(switch$Time, format = "%H:%M:%S")
switch$month <- month(switch$datetime)
View(switch)
View(switch)
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
View(df)
View(df)
df$month <- month(df$datetime)
View(df)
View(df)
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month(df$datetime)
#df$month <- factor(df$month, c("Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
df$monthorder <- 0
df[df$month == 'Nov', c('monthorder')] <- seq(1, nrow(df[df$month == 'Nov',]), 1)
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
#df$month <- factor(df$month, c("Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
df$monthorder <- 0
df[df$month == 'Nov', c('monthorder')] <- seq(1, nrow(df[df$month == 'Nov',]), 1)
df[df$month == 'Dec', c('monthorder')] <- seq(1, nrow(df[df$month == 'Dec',]), 1)
df[df$month == 'Jan', c('monthorder')] <- seq(1, nrow(df[df$month == 'Jan',]), 1)
df[df$month == 'Feb', c('monthorder')] <- seq(1, nrow(df[df$month == 'Feb',]), 1)
df[df$month == 'Mar', c('monthorder')] <- seq(1, nrow(df[df$month == 'Mar',]), 1)
df[df$month == 'Apr', c('monthorder')] <- seq(1, nrow(df[df$month == 'Apr',]), 1)
ggplot(data=df) + geom_step(aes(x=datetime, y=V8, color = name)) + facet_wrap(~month)
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
df$monthorder <- 0
df[df$month == 'Oct', c('monthorder')] <- seq(1, nrow(df[df$month == 'Oct',]), 1)
df[df$month == 'Nov', c('monthorder')] <- seq(1, nrow(df[df$month == 'Nov',]), 1)
df[df$month == 'Dec', c('monthorder')] <- seq(1, nrow(df[df$month == 'Dec',]), 1)
df[df$month == 'Jan', c('monthorder')] <- seq(1, nrow(df[df$month == 'Jan',]), 1)
df[df$month == 'Feb', c('monthorder')] <- seq(1, nrow(df[df$month == 'Feb',]), 1)
df[df$month == 'Mar', c('monthorder')] <- seq(1, nrow(df[df$month == 'Mar',]), 1)
df[df$month == 'Apr', c('monthorder')] <- seq(1, nrow(df[df$month == 'Apr',]), 1)
ggplot(data=df) + geom_step(aes(x=monthorder, y=V8, color = name)) + facet_wrap(~month)
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
ggplot(data=df) + geom_step(aes(x=datetime, y=V8, color = name)) + facet_wrap(~month)
ggplot(data=df[df$month=='Nov',]) + geom_step(aes(x=datetime, y=V8, color = name))
View(B11)
View(B11)
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month))
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month))
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)))
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)))
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black"))
)
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(names=("B11", "B12", "B21", "B22"))
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(names=c("B11", "B12", "B21", "B22"))
)
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + discrete_color_manual(names=c("B11", "B12", "B21", "B22"))
)
}
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(label=c("B11", "B12", "B21", "B22"))
)
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(label=c("B11", "B12", "B21", "B22"))
)
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(labels=c("B11", "B12", "B21", "B22"))
)
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(labels=c("B11", "B12", "B21", "B22"), values = c("midnightblue", "firebrick1", "dodgerblue", "green"))
)
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(labels=c("B11", "B12", "B21", "B22"), values = c("gold", "firebrick1", "dodgerblue", "green"))
)
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(labels=c("B11", "B12", "B21", "B22"), values = c("salmonpink", "firebrick1", "dodgerblue", "green"))
)
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(labels=c("B11", "B12", "B21", "B22"), values = c("salmon", "firebrick1", "dodgerblue", "green"))
)
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(labels=c("B11", "B12", "B21", "B22"), values = c("green", "firebrick1", "dodgerblue", "salmon"))
)
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(labels=c("B11", "B12", "B21", "B22"), values = c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3"))
)
}
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") +ylab("On/Off") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(labels=c("B11", "B12", "B21", "B22"), values = c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3"))
)
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
# Importing libraries and reading data
library(ggplot2)
library(gridExtra)
library(reshape)
library(lubridate)
m46 <- read.csv("data/MP46.csv")
m60 <- read.csv("data/MP60.csv")
switch <- read.csv("data/switching_data.csv")
# Transforming date and time variables
m46$StartTime <- as.POSIXct(m46$StartTime, format = "%d/%m/%Y %H:%M:%S")
m60$StartTime <- as.POSIXct(m60$StartTime, format = "%d/%m/%Y %H:%M:%S")
switch$datetime <- paste(switch[,1], switch$Time)
switch$datetime <- as.POSIXct(switch$datetime, format = "%d/%m/%Y %H:%M:%S")
switch$month <- month(switch$datetime)
switch[,1] <- NULL
switch$Time <- NULL
switch$datetime10mins <- floor_date(switch$datetime, "10 minutes")
# Separating dataset based on filters
B11 <- switch[switch$Element=="MDC_MDC AC Filter 11 VS",]
B12 <- switch[switch$Element=="MDC_MDC AC Filter 12 VS",]
B21 <- switch[switch$Element=="MDC_MDC AC Filter 21 VS",]
B22 <- switch[switch$Element=="MDC_MDC AC Filter 22 VS",]
# Adding name for filter as variable
B11$name <- 'B11'
B12$name <- 'B12'
B21$name <- 'B21'
B22$name <- 'B22'
# Removing second of each repeated status
B11 <- B11[seq(1, nrow(B11), 2),]
B12 <- B12[seq(1, nrow(B12), 2),]
B21 <- B21[seq(1, nrow(B21), 2),]
B22 <- B22[seq(1, nrow(B22), 2),]
B11$StartTime<-B11$datetime10mins
B11=B11[,seq(1,7,1)]
B11[which(B11$status=='UIT'),8] = -1.0
B11[which(B11$status=='IN'),8] = 0.4
B12[which(B12$status=='UIT'),8] = -1.0
B11=B11[,seq(1,7,1)]
B11[which(B11$status=='UIT'),8] = -1.0
B11[which(B11$status=='IN'),8] = 0.4
B12[which(B12$status=='UIT'),8] = -1.0
# Importing libraries and reading data
library(ggplot2)
library(gridExtra)
library(reshape)
library(lubridate)
m46 <- read.csv("data/MP46.csv")
m60 <- read.csv("data/MP60.csv")
switch <- read.csv("data/switching_data.csv")
# Transforming date and time variables
m46$StartTime <- as.POSIXct(m46$StartTime, format = "%d/%m/%Y %H:%M:%S")
m60$StartTime <- as.POSIXct(m60$StartTime, format = "%d/%m/%Y %H:%M:%S")
switch$datetime <- paste(switch[,1], switch$Time)
switch$datetime <- as.POSIXct(switch$datetime, format = "%d/%m/%Y %H:%M:%S")
switch$month <- month(switch$datetime)
switch[,1] <- NULL
switch$Time <- NULL
switch$datetime10mins <- floor_date(switch$datetime, "10 minutes")
# Separating dataset based on filters
B11 <- switch[switch$Element=="MDC_MDC AC Filter 11 VS",]
B12 <- switch[switch$Element=="MDC_MDC AC Filter 12 VS",]
B21 <- switch[switch$Element=="MDC_MDC AC Filter 21 VS",]
B22 <- switch[switch$Element=="MDC_MDC AC Filter 22 VS",]
# Adding name for filter as variable
B11$name <- 'B11'
B12$name <- 'B12'
B21$name <- 'B21'
B22$name <- 'B22'
# Removing second of each repeated status
B11 <- B11[seq(1, nrow(B11), 2),]
B12 <- B12[seq(1, nrow(B12), 2),]
B21 <- B21[seq(1, nrow(B21), 2),]
B22 <- B22[seq(1, nrow(B22), 2),]
B11$StartTime<-B11$datetime10mins
B11=B11[,seq(1,7,1)]
B11[which(B11$status=='UIT'),8] = -1.0
B11[which(B11$status=='IN'),8] = 0.4
B12[which(B12$status=='UIT'),8] = -1.0
View(B11)
View(B12)
# Importing libraries and reading data
library(ggplot2)
library(gridExtra)
library(reshape)
library(lubridate)
m46 <- read.csv("data/MP46.csv")
m60 <- read.csv("data/MP60.csv")
switch <- read.csv("data/switching_data.csv")
# Transforming date and time variables
m46$StartTime <- as.POSIXct(m46$StartTime, format = "%d/%m/%Y %H:%M:%S")
m60$StartTime <- as.POSIXct(m60$StartTime, format = "%d/%m/%Y %H:%M:%S")
switch$datetime <- paste(switch[,1], switch$Time)
switch$datetime <- as.POSIXct(switch$datetime, format = "%d/%m/%Y %H:%M:%S")
switch$month <- month(switch$datetime)
switch[,1] <- NULL
switch$Time <- NULL
switch$datetime10mins <- floor_date(switch$datetime, "10 minutes")
# Separating dataset based on filters
B11 <- switch[switch$Element=="MDC_MDC AC Filter 11 VS",]
B12 <- switch[switch$Element=="MDC_MDC AC Filter 12 VS",]
B21 <- switch[switch$Element=="MDC_MDC AC Filter 21 VS",]
B22 <- switch[switch$Element=="MDC_MDC AC Filter 22 VS",]
# Adding name for filter as variable
B11$name <- 'B11'
B12$name <- 'B12'
B21$name <- 'B21'
B22$name <- 'B22'
# Removing second of each repeated status
B11 <- B11[seq(1, nrow(B11), 2),]
B12 <- B12[seq(1, nrow(B12), 2),]
B21 <- B21[seq(1, nrow(B21), 2),]
B22 <- B22[seq(1, nrow(B22), 2),]
B11$StartTime<-B11$datetime10mins
# Importing libraries and reading data
library(ggplot2)
library(gridExtra)
library(reshape)
library(lubridate)
m46 <- read.csv("data/MP46.csv")
m60 <- read.csv("data/MP60.csv")
switch <- read.csv("data/switching_data.csv")
# Transforming date and time variables
m46$StartTime <- as.POSIXct(m46$StartTime, format = "%d/%m/%Y %H:%M:%S")
m60$StartTime <- as.POSIXct(m60$StartTime, format = "%d/%m/%Y %H:%M:%S")
switch$datetime <- paste(switch[,1], switch$Time)
switch$datetime <- as.POSIXct(switch$datetime, format = "%d/%m/%Y %H:%M:%S")
switch$month <- month(switch$datetime)
switch[,1] <- NULL
switch$Time <- NULL
switch$datetime10mins <- floor_date(switch$datetime, "10 minutes")
# Separating dataset based on filters
B11 <- switch[switch$Element=="MDC_MDC AC Filter 11 VS",]
B12 <- switch[switch$Element=="MDC_MDC AC Filter 12 VS",]
B21 <- switch[switch$Element=="MDC_MDC AC Filter 21 VS",]
B22 <- switch[switch$Element=="MDC_MDC AC Filter 22 VS",]
# Adding name for filter as variable
B11$name <- 'B11'
B12$name <- 'B12'
B21$name <- 'B21'
B22$name <- 'B22'
# Removing second of each repeated status
B11 <- B11[seq(1, nrow(B11), 2),]
B12 <- B12[seq(1, nrow(B12), 2),]
B21 <- B21[seq(1, nrow(B21), 2),]
B22 <- B22[seq(1, nrow(B22), 2),]
B11$datetime<-B11$datetime10mins
B11=B11[,seq(1,6,1)]
B11[which(B11$status=='UIT'),7] = -1.0
B11[which(B11$status=='IN'),7] = 0.4
B12[which(B12$status=='UIT'),7] = -1.0
B12[which(B12$status=='IN'),7] = 0.8
B21[which(B21$status=='UIT'),7] = -1.0
B21[which(B21$status=='IN'),7] = 1.2
B22[which(B22$status=='UIT'),7] = -1.0
B22[which(B22$status=='IN'),7] = 1.6
#B11$meow <- ifelse(B11$status == 'UIT', -1.0, 0.4)
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V8, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") +ylab("On/Off") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(labels=c("B11", "B12", "B21", "B22"), values = c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3")) + ylim(-5000, 5000)
)
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V7, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") +ylab("On/Off") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(labels=c("B11", "B12", "B21", "B22"), values = c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3")) + ylim(-5000, 5000)
)
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V7, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") +ylab("On/Off") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(labels=c("B11", "B12", "B21", "B22"), values = c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3"))
)
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V7, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") +ylab("On/Off") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(labels=c("B11", "B12", "B21", "B22"), values = c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3"))+ ylim(-1.2, 1.2)
)
}
df <- rbind(B11, B12)
df <- rbind(df, B21)
df <- rbind(df, B22)
df$month <- month.abb[month(df$datetime)]
df$month <- factor(df$month, c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")) #Ordering based on months
months = c("Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr")
for (month in months){
print(
ggplot(data=df[df$month==month,]) + geom_step(aes(x=datetime, y=V7, color = name)) + ggtitle(paste("Filters Activation during", month)) + xlab("Time") +ylab("On/Off") + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), plot.title = element_text(hjust = 0.5), axis.line = element_line(colour = "black")) + scale_color_manual(labels=c("B11", "B12", "B21", "B22"), values = c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3"))+ ylim(-1.6, 1.6)
)
}
View(df)
View(B21)
View(B22)
# Importing libraries and reading data
library(ggplot2)
library(gridExtra)
library(reshape)
library(lubridate)
m46 <- read.csv("data/MP46.csv")
